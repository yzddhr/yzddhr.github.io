<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/08/27/hello-world/"/>
      <url>/2020/08/27/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>中国人之低智力</title>
      <link href="/2020/08/27/yuque/zhong-guo-ren-zhi-di-zhi-li/"/>
      <url>/2020/08/27/yuque/zhong-guo-ren-zhi-di-zhi-li/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>其实,中国是一个科学意义上低智力的民族,打个比方,一次川普演讲中说这地方太热的有 50° 了吧,然后国内媒体把这段截下来,煞有介事的说川普是脑子坏了吧?怎么可能会有 50° 呢?然后小粉红一片叫好,太能反映问题了,幽默感是高智能人群的一个重要特征,因为幽默的本质是对对方逻辑的一种理解内化然后更进一步用对方的逻辑推导出某种极端的结论,造成幽默效果,这就要求首先要理解对方的逻辑,而中国人这方面的能力显然是不够,因此陷入了一种诅咒般的咬文嚼字的兴趣倾向<br>而之所以中国能几千年文化一事无成,都在玩文字游戏,其实也是因为智能太低,首先智力表现为一种细分分类的能力,而中国的文字典型的没有细分,用相同的语音,用象行或者比喻的方法,给事世间事物语言化的定义,这样建构的语言体系都是一种基于不确定的比喻和象行,信息密度其实不高,打个比喻,电脑,computer ,compute 是计算的意思,而 er 是者的意思,这个新词的产生不仅包含了计算和内涵信息,还有 er 这个信息的加入是一种信息密度增加的新词,而电脑这个词在中国只是用电的脑子,这种基于比喻的词句不能完整的反应信息,并且电和脑子的结合是不符合常识的,是一种逻辑冲突+至少没增加信息密度,而英语是一种类函数的一一对应+语法(联系法则)的语言,中国语言的细分远远不够,因此,古人会利用大量的字的压缩提高文字的信息密度</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用python自动签到获取流量</title>
      <link href="/2020/06/19/yuque/shi-yong-python-zi-dong-qian-dao-huo-qu-liu-liang/"/>
      <url>/2020/06/19/yuque/shi-yong-python-zi-dong-qian-dao-huo-qu-liu-liang/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>发现一个 0.5 毛一个月,而且还支持签到流量的机场,美滋滋<br>直接写个脚本每天捞点流量</p></blockquote><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Google 浏览器</li><li>chromedriver</li><li>python3</li></ul><h2 id="具体"><a href="#具体" class="headerlink" title="具体"></a>具体</h2><h3 id="服务器环境安装"><a href="#服务器环境安装" class="headerlink" title="服务器环境安装"></a>服务器环境安装</h3><p>python3</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/python3</span><br><span class="line">wget https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tgz</span><br><span class="line">tar -xvf Python-3.6.3.tgz</span><br><span class="line">//编译</span><br><span class="line">cd Python-3.6.3</span><br><span class="line">./configure --prefix=/usr/local/python3Dir</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">//报错</span><br><span class="line">yum -y install gcc</span><br><span class="line">//软连接</span><br><span class="line">//进入/usr/local/python3Dir</span><br><span class="line">ln -s /usr/local/python3Dir/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/local/python3Dir/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure></div><p>安装完成<br>修改 pip3 的默认配置</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pip -U</span><br><span class="line">pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip3 install selenium</span><br></pre></td></tr></table></figure></div><h3 id="安装浏览器环境"><a href="#安装浏览器环境" class="headerlink" title="安装浏览器环境"></a>安装浏览器环境</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装chrome-browser</span></span><br><span class="line">wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm --no-check-certificate</span><br><span class="line">sudo yum install google-chrome-stable_current_x86_64.rpm</span><br><span class="line">google-chrome --version //查看版本</span><br><span class="line">// 安装chromedviver</span><br><span class="line">//https://chromedriver.chromium.org/ 下载对应版本的二进制文件</span><br><span class="line">mv chromedriver /usr/local/bin</span><br></pre></td></tr></table></figure></div><h3 id="搭建可用的代理接口"><a href="#搭建可用的代理接口" class="headerlink" title="搭建可用的代理接口"></a>搭建可用的代理接口</h3><ul><li>见前一篇文章 <code>搭建telegarm的代理</code></li></ul><h3 id="python-脚本"><a href="#python-脚本" class="headerlink" title="python 脚本"></a>python 脚本</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> NoSuchElementException</span><br><span class="line"></span><br><span class="line">username = <span class="string">'name'</span>  <span class="comment"># 账号</span></span><br><span class="line">password = <span class="string">'passwd'</span>  <span class="comment"># 密码</span></span><br><span class="line">login_url = <span class="string">'https://paoluz.com/auth/login'</span>  <span class="comment"># 登录URL</span></span><br><span class="line">checkin_url = <span class="string">'https://paoluz.com/user'</span>  <span class="comment"># 签到URL</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chrome_options = webdriver.ChromeOptions()</span><br><span class="line"><span class="comment">#chrome_options.set_headless()</span></span><br><span class="line"><span class="comment">#chrome_options = Options()</span></span><br><span class="line">chrome_options.add_argument(<span class="string">'--headless'</span>) <span class="comment"># 16年之后，chrome给出的解决办法，抢了PhantomJS饭碗</span></span><br><span class="line">chrome_options.add_argument(<span class="string">'--disable-gpu'</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">'--no-sandbox'</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">'--proxy-server=socks://39.96.81.114:10808'</span>)</span><br><span class="line">driver = webdriver.Chrome(chrome_options = chrome_options)</span><br><span class="line">driver.maximize_window()  <span class="comment"># 最大化窗口</span></span><br><span class="line">driver.get(login_url)  <span class="comment"># 进入登录页面</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    driver.find_element_by_id(<span class="string">'email'</span>).send_keys(username)  <span class="comment"># 填充用户名和密码</span></span><br><span class="line">    driver.find_element_by_id(<span class="string">'password'</span>).send_keys(password)</span><br><span class="line">    driver.find_element_by_xpath(<span class="string">'.//button'</span>).click()  <span class="comment"># 登录</span></span><br><span class="line">    time.sleep(<span class="number">1.5</span>)</span><br><span class="line">    driver.get(checkin_url)</span><br><span class="line">    <span class="keyword">try</span>:  <span class="comment"># 未签到</span></span><br><span class="line">        driver.find_element_by_xpath(<span class="string">"//*[@class='btn btn-icon icon-left btn-primary']"</span>).click()  <span class="comment"># 签到</span></span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br><span class="line">        print(<span class="string">"签到成功"</span>)</span><br><span class="line">    <span class="keyword">except</span> NoSuchElementException:</span><br><span class="line">        print(<span class="string">"已签到"</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    print(e)</span><br><span class="line">    print(<span class="string">"签到失败"</span>)</span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure></div><p>修改 <code>name</code>  和 <code>passwd</code>  即可</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 文件名.py //即可正常签到</span><br></pre></td></tr></table></figure></div><p>后面设定定时任务即可,即可每天签到获取流量</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>telegram使用代理</title>
      <link href="/2020/06/15/yuque/telegram-shi-yong-dai-li/"/>
      <url>/2020/06/15/yuque/telegram-shi-yong-dai-li/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id><a href="#" class="headerlink" title></a><a href="https://cdn.nlark.com/yuque/0/2020/png/1550831/1592222691120-95634c6e-92eb-47e2-ba1c-aa74bd738a01.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=566189dd2240950b7a8960535121cfb3.png&originHeight=175&originWidth=404&size=9745&status=done&style=none&width=404" data-fancybox="group" data-caption="566189dd2240950b7a8960535121cfb3.png" class="fancybox"><img alt="566189dd2240950b7a8960535121cfb3.png" title="566189dd2240950b7a8960535121cfb3.png" data-src="https://cdn.nlark.com/yuque/0/2020/png/1550831/1592222691120-95634c6e-92eb-47e2-ba1c-aa74bd738a01.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=566189dd2240950b7a8960535121cfb3.png&originHeight=175&originWidth=404&size=9745&status=done&style=none&width=404" class="lazyload"></a></h2><h2 id="具体方式"><a href="#具体方式" class="headerlink" title="具体方式"></a>具体方式</h2><ul><li>v2ray 转 socks5 代理 (有服务器即可,国内的也可)</li><li>MTDPROXY telegram 官方的代理 (需要有主权的国外服务器)</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><p>脚本在安装 MTProxy<br><a href="https://www.yuque.com/attachments/yuque/0/2020/sh/1550831/1592222611562-4bb2d085-de14-4f74-b346-797c890a2954.sh?_lake_card=%7B%22uid%22%3A%221592222612396-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Fsh%2F1550831%2F1592222611562-4bb2d085-de14-4f74-b346-797c890a2954.sh%22%2C%22name%22%3A%22mtproxy_go.sh%22%2C%22size%22%3A28057%2C%22type%22%3A%22text%2Fx-sh%22%2C%22ext%22%3A%22sh%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22B3Sbf%22%2C%22card%22%3A%22file%22%7D" target="_blank" rel="noopener">mtproxy_go.sh</a></p><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><p>利用 v2ray 容器当服务端</p><ol><li>vmess2json.py</li></ol><p><a href="https://www.yuque.com/attachments/yuque/0/2020/txt/1550831/1592222498021-9856ae6d-1e7b-4d64-80ed-b085b1954175.txt?_lake_card=%7B%22uid%22%3A%221592222498691-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Ftxt%2F1550831%2F1592222498021-9856ae6d-1e7b-4d64-80ed-b085b1954175.txt%22%2C%22name%22%3A%22vemss2json.py%22%2C%22size%22%3A20877%2C%22type%22%3A%22text%2Fplain%22%2C%22ext%22%3A%22txt%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22xCjvL%22%2C%22card%22%3A%22file%22%7D" target="_blank" rel="noopener">vemss2json.py</a>   保存成 config.josn 文件 注意改监听地址为 0.0.0.0</p><ol start="2"><li>运行命令即可</li></ol><p><code>docker run -d -v $PWD:/etc/v2ray -p 10808:1080 --name v2 v2ray/official</code></p><ol start="3"><li>sock5 加密 修改如下字段即可</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"settings": &#123;</span><br><span class="line">                "auth": "password",</span><br><span class="line">                "accounts": [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"user"</span>: <span class="string">"yzddhr"</span>,</span><br><span class="line">                    <span class="attr">"pass"</span>: <span class="string">"passwd"</span></span><br><span class="line">                &#125;</span><br><span class="line">                ],</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用jsproxy和cloudflare搭建cn用代理</title>
      <link href="/2020/06/12/yuque/li-yong-jsproxy-he-cloudflare-da-jian-cn-yong-dai-li/"/>
      <url>/2020/06/12/yuque/li-yong-jsproxy-he-cloudflare-da-jian-cn-yong-dai-li/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591938916343-67e6c99b-d80b-4541-9b02-220b7cdad5b6.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=2f437623e0af8372f0b0b1c5e9e2aa30.png&originHeight=175&originWidth=606&size=14277&status=done&style=none&width=606" data-fancybox="group" data-caption="2f437623e0af8372f0b0b1c5e9e2aa30.png" class="fancybox"><img alt="2f437623e0af8372f0b0b1c5e9e2aa30.png" title="2f437623e0af8372f0b0b1c5e9e2aa30.png" data-src="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591938916343-67e6c99b-d80b-4541-9b02-220b7cdad5b6.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=2f437623e0af8372f0b0b1c5e9e2aa30.png&originHeight=175&originWidth=606&size=14277&status=done&style=none&width=606" class="lazyload"></a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li>前面的帖子介绍过好用的 cloudflare 的 work 项目</li><li>可以搭建一个中国本地可用的代理</li><li>这个代理是 cloudflare 只发数据,js 的数据操作在浏览器端进行,减少服务端压力</li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><ul><li><a href="https://hub.yzddahaoren.workers.dev" target="_blank" rel="noopener">https://hub.yzddahaoren.workers.dev</a> //你懂的</li><li><a href="https://hub.yzddahaoren.workers.dev" target="_blank" rel="noopener">https://porn.yzddahaoren.workers.dev</a> //其他工具网站</li></ul><h2 id="具体"><a href="#具体" class="headerlink" title="具体"></a>具体</h2><h3 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h3><ul><li>注册<strong>cloudflare</strong>的账号</li><li>验证注册的邮箱(必须验证,否则不能用,建议 gmail)</li></ul><h3 id="创建-work"><a href="#创建-work" class="headerlink" title="创建 work"></a>创建 work</h3><ul><li>项目地址 : <a href="https://github.com/Berkeley-Reject/workers-proxy/" target="_blank" rel="noopener">项目</a></li><li>登陆项目 : <a href="https://workers.cloudflare.com/" target="_blank" rel="noopener">项目</a></li><li>点击 ==&gt; <strong>create a worker</strong></li><li>修改左上角的一传随机的字母,改成有意义的组合</li><li>粘贴如下代码 (以下有两种代理)</li></ul><ul><li>第一种 (工具类)</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">jsx</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * static files (404.html, sw.js, conf.js)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> ASSET_URL = <span class="string">"https://etherdream.github.io/jsproxy"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> JS_VER = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> MAX_RETRY = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@type <span class="type">&#123;RequestInit&#125;</span> </span>*/</span></span><br><span class="line"><span class="keyword">const</span> PREFLIGHT_INIT = &#123;</span><br><span class="line">  status: <span class="number">204</span>,</span><br><span class="line">  headers: <span class="keyword">new</span> Headers(&#123;</span><br><span class="line">    <span class="string">"access-control-allow-origin"</span>: <span class="string">"*"</span>,</span><br><span class="line">    <span class="string">"access-control-allow-methods"</span>:</span><br><span class="line">      <span class="string">"GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS"</span>,</span><br><span class="line">    <span class="string">"access-control-max-age"</span>: <span class="string">"1728000"</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;any&#125;</span> <span class="variable">body</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">status</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&lt;string, string&gt;&#125;</span> <span class="variable">headers</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeRes</span>(<span class="params">body, status = <span class="number">200</span>, headers = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">  headers[<span class="string">"--ver"</span>] = JS_VER;</span><br><span class="line">  headers[<span class="string">"access-control-allow-origin"</span>] = <span class="string">"*"</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(body, &#123; status, headers &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">urlStr</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">newUrl</span>(<span class="params">urlStr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> URL(urlStr);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">addEventListener(<span class="string">"fetch"</span>, (e) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> ret = fetchHandler(e).catch(<span class="function">(<span class="params">err</span>) =&gt;</span></span><br><span class="line">    makeRes(<span class="string">"cfworker error:\n"</span> + err.stack, <span class="number">502</span>)</span><br><span class="line">  );</span><br><span class="line">  e.respondWith(ret);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;FetchEvent&#125;</span> <span class="variable">e</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchHandler</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> req = e.request;</span><br><span class="line">  <span class="keyword">const</span> urlStr = req.url;</span><br><span class="line">  <span class="keyword">const</span> urlObj = <span class="keyword">new</span> URL(urlStr);</span><br><span class="line">  <span class="keyword">const</span> path = urlObj.href.substr(urlObj.origin.length);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (urlObj.protocol === <span class="string">"http:"</span>) &#123;</span><br><span class="line">    urlObj.protocol = <span class="string">"https:"</span>;</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">""</span>, <span class="number">301</span>, &#123;</span><br><span class="line">      <span class="string">"strict-transport-security"</span>:</span><br><span class="line">        <span class="string">"max-age=99999999; includeSubDomains; preload"</span>,</span><br><span class="line">      location: urlObj.href,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (path.startsWith(<span class="string">"/http/"</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> httpHandler(req, path.substr(<span class="number">6</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span> (path) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">"/http"</span>:</span><br><span class="line">      <span class="keyword">return</span> makeRes(<span class="string">"请更新 cfworker 到最新版本!"</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="string">"/ws"</span>:</span><br><span class="line">      <span class="keyword">return</span> makeRes(<span class="string">"not support"</span>, <span class="number">400</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="string">"/works"</span>:</span><br><span class="line">      <span class="keyword">return</span> makeRes(<span class="string">"it works"</span>);</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="comment">// static files</span></span><br><span class="line">      <span class="keyword">return</span> fetch(ASSET_URL + path);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Request&#125;</span> <span class="variable">req</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">pathname</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">httpHandler</span>(<span class="params">req, pathname</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reqHdrRaw = req.headers;</span><br><span class="line">  <span class="keyword">if</span> (reqHdrRaw.has(<span class="string">"x-jsproxy"</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> Response.error();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// preflight</span></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    req.method === <span class="string">"OPTIONS"</span> &amp;&amp;</span><br><span class="line">    reqHdrRaw.has(<span class="string">"access-control-request-headers"</span>)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="literal">null</span>, PREFLIGHT_INIT);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> acehOld = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">let</span> rawSvr = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">let</span> rawLen = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">let</span> rawEtag = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reqHdrNew = <span class="keyword">new</span> Headers(reqHdrRaw);</span><br><span class="line">  reqHdrNew.set(<span class="string">"x-jsproxy"</span>, <span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 此处逻辑和 http-dec-req-hdr.lua 大致相同</span></span><br><span class="line">  <span class="comment">// https://github.com/EtherDream/jsproxy/blob/master/lua/http-dec-req-hdr.lua</span></span><br><span class="line">  <span class="keyword">const</span> refer = reqHdrNew.get(<span class="string">"referer"</span>);</span><br><span class="line">  <span class="keyword">const</span> query = refer.substr(refer.indexOf(<span class="string">"?"</span>) + <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> (!query) &#123;</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">"missing params"</span>, <span class="number">403</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> param = <span class="keyword">new</span> URLSearchParams(query);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [k, v] <span class="keyword">of</span> <span class="built_in">Object</span>.entries(param)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (k.substr(<span class="number">0</span>, <span class="number">2</span>) === <span class="string">"--"</span>) &#123;</span><br><span class="line">      <span class="comment">// 系统信息</span></span><br><span class="line">      <span class="keyword">switch</span> (k.substr(<span class="number">2</span>)) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"aceh"</span>:</span><br><span class="line">          acehOld = <span class="literal">true</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"raw-info"</span>:</span><br><span class="line">          [rawSvr, rawLen, rawEtag] = v.split(<span class="string">"|"</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 还原 HTTP 请求头</span></span><br><span class="line">      <span class="keyword">if</span> (v) &#123;</span><br><span class="line">        reqHdrNew.set(k, v);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        reqHdrNew.delete(k);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!param.has(<span class="string">"referer"</span>)) &#123;</span><br><span class="line">    reqHdrNew.delete(<span class="string">"referer"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// cfworker 会把路径中的 `//` 合并成 `/`</span></span><br><span class="line">  <span class="keyword">const</span> urlStr = pathname.replace(<span class="regexp">/^(https?):\/+/</span>, <span class="string">"$1://"</span>);</span><br><span class="line">  <span class="keyword">const</span> urlObj = newUrl(urlStr);</span><br><span class="line">  <span class="keyword">if</span> (!urlObj) &#123;</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">"invalid proxy url: "</span> + urlStr, <span class="number">403</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@type <span class="type">&#123;RequestInit&#125;</span> </span>*/</span></span><br><span class="line">  <span class="keyword">const</span> reqInit = &#123;</span><br><span class="line">    method: req.method,</span><br><span class="line">    headers: reqHdrNew,</span><br><span class="line">    redirect: <span class="string">"manual"</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (req.method === <span class="string">"POST"</span>) &#123;</span><br><span class="line">    reqInit.body = req.body;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> proxy(urlObj, reqInit, acehOld, rawLen, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;URL&#125;</span> <span class="variable">urlObj</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;RequestInit&#125;</span> <span class="variable">reqInit</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">retryTimes</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">proxy</span>(<span class="params">urlObj, reqInit, acehOld, rawLen, retryTimes</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> fetch(urlObj.href, reqInit);</span><br><span class="line">  <span class="keyword">const</span> resHdrOld = res.headers;</span><br><span class="line">  <span class="keyword">const</span> resHdrNew = <span class="keyword">new</span> Headers(resHdrOld);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> expose = <span class="string">"*"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [k, v] <span class="keyword">of</span> resHdrOld.entries()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      k === <span class="string">"access-control-allow-origin"</span> ||</span><br><span class="line">      k === <span class="string">"access-control-expose-headers"</span> ||</span><br><span class="line">      k === <span class="string">"location"</span> ||</span><br><span class="line">      k === <span class="string">"set-cookie"</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">const</span> x = <span class="string">"--"</span> + k;</span><br><span class="line">      resHdrNew.set(x, v);</span><br><span class="line">      <span class="keyword">if</span> (acehOld) &#123;</span><br><span class="line">        expose = expose + <span class="string">","</span> + x;</span><br><span class="line">      &#125;</span><br><span class="line">      resHdrNew.delete(k);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">      acehOld &amp;&amp;</span><br><span class="line">      k !== <span class="string">"cache-control"</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">"content-language"</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">"content-type"</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">"expires"</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">"last-modified"</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">"pragma"</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      expose = expose + <span class="string">","</span> + k;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (acehOld) &#123;</span><br><span class="line">    expose = expose + <span class="string">",--s"</span>;</span><br><span class="line">    resHdrNew.set(<span class="string">"--t"</span>, <span class="string">"1"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// verify</span></span><br><span class="line">  <span class="keyword">if</span> (rawLen) &#123;</span><br><span class="line">    <span class="keyword">const</span> newLen = resHdrOld.get(<span class="string">"content-length"</span>) || <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">const</span> badLen = rawLen !== newLen;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (badLen) &#123;</span><br><span class="line">      <span class="keyword">if</span> (retryTimes &lt; MAX_RETRY) &#123;</span><br><span class="line">        urlObj = <span class="keyword">await</span> parseYtVideoRedir(urlObj, newLen, res);</span><br><span class="line">        <span class="keyword">if</span> (urlObj) &#123;</span><br><span class="line">          <span class="keyword">return</span> proxy(urlObj, reqInit, acehOld, rawLen, retryTimes + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> makeRes(res.body, <span class="number">400</span>, &#123;</span><br><span class="line">        <span class="string">"--error"</span>: <span class="string">`bad len: <span class="subst">$&#123;newLen&#125;</span>, except: <span class="subst">$&#123;rawLen&#125;</span>`</span>,</span><br><span class="line">        <span class="string">"access-control-expose-headers"</span>: <span class="string">"--error"</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (retryTimes &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      resHdrNew.set(<span class="string">"--retry"</span>, retryTimes);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> status = res.status;</span><br><span class="line"></span><br><span class="line">  resHdrNew.set(<span class="string">"access-control-expose-headers"</span>, expose);</span><br><span class="line">  resHdrNew.set(<span class="string">"access-control-allow-origin"</span>, <span class="string">"*"</span>);</span><br><span class="line">  resHdrNew.set(<span class="string">"--s"</span>, status);</span><br><span class="line">  resHdrNew.set(<span class="string">"--ver"</span>, JS_VER);</span><br><span class="line"></span><br><span class="line">  resHdrNew.delete(<span class="string">"content-security-policy"</span>);</span><br><span class="line">  resHdrNew.delete(<span class="string">"content-security-policy-report-only"</span>);</span><br><span class="line">  resHdrNew.delete(<span class="string">"clear-site-data"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    status === <span class="number">301</span> ||</span><br><span class="line">    status === <span class="number">302</span> ||</span><br><span class="line">    status === <span class="number">303</span> ||</span><br><span class="line">    status === <span class="number">307</span> ||</span><br><span class="line">    status === <span class="number">308</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    status = status + <span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(res.body, &#123;</span><br><span class="line">    status,</span><br><span class="line">    headers: resHdrNew,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;URL&#125;</span> <span class="variable">urlObj</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isYtUrl</span>(<span class="params">urlObj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    urlObj.host.endsWith(<span class="string">".googlevideo.com"</span>) &amp;&amp;</span><br><span class="line">    urlObj.pathname.startsWith(<span class="string">"/videoplayback"</span>)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;URL&#125;</span> <span class="variable">urlObj</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">newLen</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Response&#125;</span> <span class="variable">res</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">parseYtVideoRedir</span>(<span class="params">urlObj, newLen, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (newLen &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> res.text();</span><br><span class="line">    urlObj = <span class="keyword">new</span> URL(data);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> urlObj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li>第二种 (你懂的)</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">jsx</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Website you intended to retrieve for users.</span></span><br><span class="line"><span class="keyword">const</span> upstream = <span class="string">"www.pornhub.com"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Custom pathname for the upstream website.</span></span><br><span class="line"><span class="keyword">const</span> upstream_path = <span class="string">"/"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Website you intended to retrieve for users using mobile devices.</span></span><br><span class="line"><span class="keyword">const</span> upstream_mobile = <span class="string">"www.pornhub.com"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Countries and regions where you wish to suspend your service.</span></span><br><span class="line"><span class="keyword">const</span> blocked_region = [<span class="string">"KP"</span>, <span class="string">"SY"</span>, <span class="string">"PK"</span>, <span class="string">"CU"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// IP addresses which you wish to block from using your service.</span></span><br><span class="line"><span class="keyword">const</span> blocked_ip_address = [<span class="string">"0.0.0.0"</span>, <span class="string">"127.0.0.1"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Whether to use HTTPS protocol for upstream address.</span></span><br><span class="line"><span class="keyword">const</span> https = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Whether to disable cache.</span></span><br><span class="line"><span class="keyword">const</span> disable_cache = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Replace texts.</span></span><br><span class="line"><span class="keyword">const</span> replace_dict = &#123;</span><br><span class="line">  $upstream: <span class="string">"$custom_domain"</span>,</span><br><span class="line">  <span class="string">"//cn.phncdn.com"</span>: <span class="string">"//hub.yzddahaoren.workers.dev"</span>, <span class="comment">// replace this with your other deployment.</span></span><br><span class="line">  <span class="string">"var scriptText"</span>: <span class="string">""</span>, <span class="comment">// Issue #30</span></span><br><span class="line">  <span class="string">"trafficjunky.com"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"trafficjunky.net"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"contentabc.com"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"Ads By Traffic Junky"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"cdn1d-static-shared.phncdn.com/iframe-1.1.5.html"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"/ads/iframe-mobile-3.0.0.html"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"&lt;iframe"</span>: <span class="string">"&lt;!--"</span>,</span><br><span class="line">  <span class="string">"&lt;/iframe&gt;"</span>: <span class="string">"--&gt;"</span>,</span><br><span class="line">  <span class="string">"Remove Ads"</span>: <span class="string">""</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">addEventListener(<span class="string">"fetch"</span>, (event) =&gt; &#123;</span><br><span class="line">  event.respondWith(fetchAndApply(event.request));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchAndApply</span>(<span class="params">request</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> region = request.headers.get(<span class="string">"cf-ipcountry"</span>).toUpperCase();</span><br><span class="line">  <span class="keyword">const</span> ip_address = request.headers.get(<span class="string">"cf-connecting-ip"</span>);</span><br><span class="line">  <span class="keyword">const</span> user_agent = request.headers.get(<span class="string">"user-agent"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> response = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">let</span> url = <span class="keyword">new</span> URL(request.url);</span><br><span class="line">  <span class="keyword">let</span> url_hostname = url.hostname;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (https == <span class="literal">true</span>) &#123;</span><br><span class="line">    url.protocol = <span class="string">"https:"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    url.protocol = <span class="string">"http:"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">await</span> device_status(user_agent)) &#123;</span><br><span class="line">    <span class="keyword">var</span> upstream_domain = upstream;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> upstream_domain = upstream_mobile;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  url.host = upstream_domain;</span><br><span class="line">  <span class="keyword">if</span> (url.pathname == <span class="string">"/"</span>) &#123;</span><br><span class="line">    url.pathname = upstream_path;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    url.pathname = upstream_path + url.pathname;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (blocked_region.includes(region)) &#123;</span><br><span class="line">    response = <span class="keyword">new</span> Response(</span><br><span class="line">      <span class="string">"Access denied: WorkersProxy is not available in your region yet."</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        status: <span class="number">403</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (blocked_ip_address.includes(ip_address)) &#123;</span><br><span class="line">    response = <span class="keyword">new</span> Response(</span><br><span class="line">      <span class="string">"Access denied: Your IP address is blocked by WorkersProxy."</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        status: <span class="number">403</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> method = request.method;</span><br><span class="line">    <span class="keyword">let</span> request_headers = request.headers;</span><br><span class="line">    <span class="keyword">let</span> new_request_headers = <span class="keyword">new</span> Headers(request_headers);</span><br><span class="line"></span><br><span class="line">    new_request_headers.set(<span class="string">"Host"</span>, upstream_domain);</span><br><span class="line">    new_request_headers.set(<span class="string">"Referer"</span>, url.protocol + <span class="string">"//"</span> + url_hostname);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> original_response = <span class="keyword">await</span> fetch(url.href, &#123;</span><br><span class="line">      method: method,</span><br><span class="line">      headers: new_request_headers,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    connection_upgrade = new_request_headers.get(<span class="string">"Upgrade"</span>);</span><br><span class="line">    <span class="keyword">if</span> (connection_upgrade &amp;&amp; connection_upgrade.toLowerCase() == <span class="string">"websocket"</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> original_response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> original_response_clone = original_response.clone();</span><br><span class="line">    <span class="keyword">let</span> original_text = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">let</span> response_headers = original_response.headers;</span><br><span class="line">    <span class="keyword">let</span> new_response_headers = <span class="keyword">new</span> Headers(response_headers);</span><br><span class="line">    <span class="keyword">let</span> status = original_response.status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (disable_cache) &#123;</span><br><span class="line">      new_response_headers.set(<span class="string">"Cache-Control"</span>, <span class="string">"no-store"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    new_response_headers.set(<span class="string">"access-control-allow-origin"</span>, <span class="string">"*"</span>);</span><br><span class="line">    new_response_headers.set(<span class="string">"access-control-allow-credentials"</span>, <span class="literal">true</span>);</span><br><span class="line">    new_response_headers.delete(<span class="string">"content-security-policy"</span>);</span><br><span class="line">    new_response_headers.delete(<span class="string">"content-security-policy-report-only"</span>);</span><br><span class="line">    new_response_headers.delete(<span class="string">"clear-site-data"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (new_response_headers.get(<span class="string">"x-pjax-url"</span>)) &#123;</span><br><span class="line">      new_response_headers.set(</span><br><span class="line">        <span class="string">"x-pjax-url"</span>,</span><br><span class="line">        response_headers</span><br><span class="line">          .get(<span class="string">"x-pjax-url"</span>)</span><br><span class="line">          .replace(<span class="string">"//"</span> + upstream_domain, <span class="string">"//"</span> + url_hostname)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> content_type = new_response_headers.get(<span class="string">"content-type"</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      content_type != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      content_type.includes(<span class="string">"text/html"</span>) &amp;&amp;</span><br><span class="line">      content_type.includes(<span class="string">"UTF-8"</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">      original_text = <span class="keyword">await</span> replace_response_text(</span><br><span class="line">        original_response_clone,</span><br><span class="line">        upstream_domain,</span><br><span class="line">        url_hostname</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      original_text = original_response_clone.body;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    response = <span class="keyword">new</span> Response(original_text, &#123;</span><br><span class="line">      status,</span><br><span class="line">      headers: new_response_headers,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">replace_response_text</span>(<span class="params">response, upstream_domain, host_name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> text = <span class="keyword">await</span> response.text();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> i, j;</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> replace_dict) &#123;</span><br><span class="line">    j = replace_dict[i];</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="string">"$upstream"</span>) &#123;</span><br><span class="line">      i = upstream_domain;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="string">"$custom_domain"</span>) &#123;</span><br><span class="line">      i = host_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j == <span class="string">"$upstream"</span>) &#123;</span><br><span class="line">      j = upstream_domain;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="string">"$custom_domain"</span>) &#123;</span><br><span class="line">      j = host_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(i, <span class="string">"g"</span>);</span><br><span class="line">    text = text.replace(re, j);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">device_status</span>(<span class="params">user_agent_info</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> agents = [</span><br><span class="line">    <span class="string">"Android"</span>,</span><br><span class="line">    <span class="string">"iPhone"</span>,</span><br><span class="line">    <span class="string">"SymbianOS"</span>,</span><br><span class="line">    <span class="string">"Windows Phone"</span>,</span><br><span class="line">    <span class="string">"iPad"</span>,</span><br><span class="line">    <span class="string">"iPod"</span>,</span><br><span class="line">  ];</span><br><span class="line">  <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> v = <span class="number">0</span>; v &lt; agents.length; v++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (user_agent_info.indexOf(agents[v]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      flag = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li>简洁 :<ul><li>第一个是包含 <strong>google youtube twitter facebook github **和其他,其中</strong>twitter**已经不能用了</li><li>第二种可以换成自己需要的网站,具体的项目内自己看,前面有项目地址,这里是<strong>pornhub</strong></li></ul></li></ul><p>**</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol><li>这里的速度比较不快,但是还能用</li><li>其中第一个项目的 : <a href>链接 </a></li><li>这个项目可以自己用自己的国外<strong>vps</strong>搭建</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cloudflare的work项目</title>
      <link href="/2020/06/12/yuque/cloudflare-de-work-xiang-mu/"/>
      <url>/2020/06/12/yuque/cloudflare-de-work-xiang-mu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591939037100-6628528e-0dd8-4049-846d-c23f74e0937b.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=384a62c1f5d853d632782232fb235809.png&originHeight=175&originWidth=422&size=9502&status=done&style=none&width=422" data-fancybox="group" data-caption="384a62c1f5d853d632782232fb235809.png" class="fancybox"><img alt="384a62c1f5d853d632782232fb235809.png" title="384a62c1f5d853d632782232fb235809.png" data-src="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591939037100-6628528e-0dd8-4049-846d-c23f74e0937b.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=384a62c1f5d853d632782232fb235809.png&originHeight=175&originWidth=422&size=9502&status=done&style=none&width=422" class="lazyload"></a><br>整理好用的 cloudflare 的 work 项目</p><hr><h4 id="网盘目录"><a href="#网盘目录" class="headerlink" title="网盘目录"></a><strong>网盘目录</strong></h4><ul><li><p><strong>Goindex</strong><br>Goindex 修改版，支持多盘、搜索、分页加载等功能。<br><a href="https://github.com/yanzai/goindex" target="_blank" rel="noopener">https://github.com/yanzai/goindex</a></p></li><li><p><strong>goindex-theme-acrou</strong><br>另一个 Goindex 修改版<br><a href="https://github.com/Aicirou/goindex-theme-acrou" target="_blank" rel="noopener">https://github.com/Aicirou/goindex-theme-acrou</a></p></li><li><p><strong>GDindex</strong><br>使用 Vue 编写的 Google Drive 目录<br><a href="https://github.com/maple3142/GDIndex" target="_blank" rel="noopener">https://github.com/maple3142/GDIndex</a></p></li><li><p><strong>OneDrive Index</strong><br>OneDrive 目录<br><a href="https://github.com/heymind/OneDrive-Index-Cloudflare-Worker" target="_blank" rel="noopener">https://github.com/heymind/OneDrive-Index-Cloudflare-Worker</a></p></li></ul><hr><h4 id="代理"><a href="#代理" class="headerlink" title="代理"></a><strong>代理</strong></h4><ul><li><p><strong>jsproxy</strong><br>一个基于浏览器端 JS 实现的在线代理<br><a href="https://github.com/EtherDream/jsproxy/tree/master/cf-worker" target="_blank" rel="noopener">https://github.com/EtherDream/jsproxy/tree/master/cf-worker</a></p></li><li><p><strong>Workers-Proxy</strong><br>使用 Cloudflare Workers 构建的轻量级 Javascript 反向代理<br><a href="https://github.com/Berkeley-Reject/Workers-Proxy" target="_blank" rel="noopener">https://github.com/Berkeley-Reject/Workers-Proxy</a></p></li><li><p><strong>gh-proxy</strong><br>github release、archive 以及项目文件的加速项目<br><a href="https://github.com/hunshcn/gh-proxy" target="_blank" rel="noopener">https://github.com/hunshcn/gh-proxy</a></p></li></ul><hr><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a><strong>网站</strong></h4><ul><li><p><strong>Cloudflare Workers blog</strong><br>Cloudflare workers + Github 实现的动态博客系统，使用边缘计算，无需服务器。<br><a href="https://github.com/kasuganosoras/cloudflare-worker-blog" target="_blank" rel="noopener">https://github.com/kasuganosoras/cloudflare-worker-blog</a></p></li><li><p><strong>CF-Worker-Dir</strong><br>个人导航网站<br><a href="https://github.com/sleepwood/CF-Worker-Dir" target="_blank" rel="noopener">https://github.com/sleepwood/CF-Worker-Dir</a></p></li></ul><hr><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h4><ul><li><p><strong>create-share-teamdrive</strong><br>创建并分享谷歌团队盘<br><a href="https://github.com/yyuueexxiinngg/some-scripts/blob/master/workers/google/drive/create-share-teamdrive.js" target="_blank" rel="noopener">https://github.com/yyuueexxiinngg/some-scripts/blob/master/workers/google/drive/create-share-teamdrive.js</a></p></li><li><p><strong>duanwangzhi</strong><br>一个极简风格的短网址转换。<br><a href="https://github.com/Closty/duanwangzhi" target="_blank" rel="noopener">https://github.com/Closty/duanwangzhi</a></p></li><li><p>部署基于 Telegraf 框架的 Telegram Bot<br><a href="https://moe.best/tutorial/cfworker-telegraf-tgbot.html" target="_blank" rel="noopener">https://moe.best/tutorial/cfworker-telegraf-tgbot.html</a></p></li><li><p>搭建网站状态监控<br><a href="https://www.raycoder.me/p/cloudflare-workers-website-monitoring/" target="_blank" rel="noopener">https://www.raycoder.me/p/cloudflare-workers-website-monitoring/</a></p></li><li><p>Cloudflare Worker 反代 V2Ray<br><a href="https://www.hostloc.com/thread-585159-1-1.html" target="_blank" rel="noopener">https://www.hostloc.com/thread-585159-1-1.html</a><br><a href="https://lowvps.cn/cloudflare-worker-%E5%8F%8D%E4%BB%A3-v2ray" target="_blank" rel="noopener">镜像链接</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自动爬取同人音声网站的mp3文件</title>
      <link href="/2020/06/11/yuque/zi-dong-pa-qu-tong-ren-yin-sheng-wang-zhan-de-mp3-wen-jian/"/>
      <url>/2020/06/11/yuque/zi-dong-pa-qu-tong-ren-yin-sheng-wang-zhan-de-mp3-wen-jian/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id><a href="#" class="headerlink" title></a><a href="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591836230716-307fd330-c1d8-48cf-909d-61018a2a861c.png#align=left&display=inline&height=534&margin=%5Bobject%20Object%5D&name=kak.PNG&originHeight=534&originWidth=1755&size=139186&status=done&style=none&width=1755" data-fancybox="group" data-caption="kak.PNG" class="fancybox"><img alt="kak.PNG" title="kak.PNG" data-src="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591836230716-307fd330-c1d8-48cf-909d-61018a2a861c.png#align=left&display=inline&height=534&margin=%5Bobject%20Object%5D&name=kak.PNG&originHeight=534&originWidth=1755&size=139186&status=done&style=none&width=1755" class="lazyload"></a></h2><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>最近发现了一个外国人搭建的同人音声网站 <a href="https://japaneseasmr.com" target="_blank" rel="noopener">https://japaneseasmr.com</a> ,admin 每天更新,遂爬之<br>但是还是不要太过分,看更新的频率应该不是脚本更新.</p><h2 id="环境和工具"><a href="#环境和工具" class="headerlink" title="环境和工具"></a>环境和工具</h2><ul><li>使用 IDM 破解版,因为直接就有方便</li><li>v2ray 代理,你懂的原因</li></ul><h4 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h4><ul><li>IDM 设置代理下载(服务器在国外)</li><li>v2ray 开启 http 代理</li></ul><h3 id="脚本编写"><a href="#脚本编写" class="headerlink" title="脚本编写"></a>脚本编写</h3><h4 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h4><ul><li>下载 mp3 文件</li><li>下载封面图片</li><li>去 dlsite 找文件详细信息</li></ul><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> call</span><br><span class="line"><span class="keyword">import</span> eyed3</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line">base_url = <span class="string">'https://japaneseasmr.com/tag/'</span></span><br><span class="line">proxies = &#123;<span class="string">"http"</span>: <span class="string">"http://127.0.0.1:10809"</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(tag)</span>:</span></span><br><span class="line">    tag_true = str(tag)</span><br><span class="line">    url = base_url + <span class="string">'&#123;&#125;'</span>.format(tag_true)</span><br><span class="line">    resqonse = requests.get(url,headers=headers,proxies=proxies)</span><br><span class="line">    html = resqonse.text</span><br><span class="line">    link_html = etree.HTML(html)</span><br><span class="line">    page_num = link_html.xpath(<span class="string">'//div[@class="nav-links"]/a[@class="page-numbers"]'</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> int(page_num)+<span class="number">1</span>:</span><br><span class="line">        nuw_url =  url + <span class="string">'/page/'</span> + <span class="string">'&#123;&#125;'</span>.format(i+<span class="number">1</span>)</span><br><span class="line">        new_response = requests.get(url=nuw_url,headers=headers,proxies=proxies)</span><br><span class="line">        new_html = etree.HTML(new_response)</span><br><span class="line">    <span class="comment"># print(link_html)</span></span><br><span class="line">        <span class="keyword">return</span> new_html</span><br><span class="line">        urls = get_urls(new_html)</span><br><span class="line">        get_music(urls)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_urls</span><span class="params">(new_html)</span>:</span></span><br><span class="line">    urls = new_html.xpath(<span class="string">'//div[@class="entry-preview-wrapper clearfix"]/h2/a/@href'</span>)</span><br><span class="line">    <span class="comment"># print(urls)</span></span><br><span class="line">    <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_music</span><span class="params">(urls)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        url_response = requests.get(url,headers=headers,proxies=proxies)</span><br><span class="line">        url_html = url_response.text</span><br><span class="line">        url_link = etree.HTML(url_html)</span><br><span class="line">        download_link = url_link.xpath(<span class="string">'//div[@class="audio_main"]/audio/source[@id="backup_a"]/@src'</span>)</span><br><span class="line">        <span class="comment"># path(download_link)</span></span><br><span class="line">        download(download_link)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># print(download_link)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(download_link)</span>:</span></span><br><span class="line">    IDM = <span class="string">r'F:\Program Files\xiazai\Internet Download Manager\IDMan.exe'</span></span><br><span class="line">    out_name = download_link[<span class="number">0</span>].split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">    dir_name = out_name.split(<span class="string">'.'</span>)[<span class="number">0</span>]</span><br><span class="line">    rj = dir_name[<span class="number">2</span>:]</span><br><span class="line">    rji = int(rj)</span><br><span class="line">    rjh = ((rji//<span class="number">1000</span>)+<span class="number">1</span>)*<span class="number">1000</span></span><br><span class="line">    save_path = <span class="string">r'G:\1A-MUSIC\NEW\thing\&#123;&#125;'</span>.format(dir_name)</span><br><span class="line">    img_path = <span class="string">'https://img.dlsite.jp/modpub/images2/work/doujin/'</span>+<span class="string">'RJ'</span>+<span class="string">'&#123;&#125;'</span>.format(rjh) +<span class="string">'/'</span>+ dir_name + <span class="string">'_img_main.jpg'</span></span><br><span class="line">    <span class="comment"># img_path = 'https://pic.weeabo0.xyz/' + dir_name + '_img_main.jpg'</span></span><br><span class="line">    img_name = dir_name + <span class="string">'.jpg'</span></span><br><span class="line">    print(<span class="string">'-'</span>*<span class="number">30</span>+<span class="string">'正在保存&#123;&#125;'</span>.format(dir_name)+<span class="string">'-'</span>*<span class="number">30</span>)</span><br><span class="line">    call([IDM, <span class="string">'/d'</span> ,download_link, <span class="string">'/p'</span> ,save_path, <span class="string">'/f'</span> ,out_name, <span class="string">'/n'</span> , <span class="string">'/a'</span>])</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    call([IDM, <span class="string">'/d'</span> ,img_path, <span class="string">'/p'</span> ,save_path, <span class="string">'/f'</span> ,img_name, <span class="string">'/n'</span> , <span class="string">'/a'</span>])</span><br><span class="line">    <span class="comment"># print('-'*30+'开始合并文件'+'-'*30)</span></span><br><span class="line">    <span class="comment"># mp3(save_path,out_name,img_name)</span></span><br><span class="line">    <span class="comment"># print('-'*30+'合并文件完成'+'-'*30)</span></span><br><span class="line">    text_hanshu = get_dlsite(dir_name,save_path)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dlsite</span><span class="params">(dir_name,save_path)</span>:</span></span><br><span class="line">    dlsite_link = <span class="string">'https://www.dlsite.com/maniax/work/=/product_id/&#123;&#125;.html'</span>.format(dir_name)</span><br><span class="line">    dlsite_response = requests.get(url=dlsite_link,headers=headers,proxies=proxies)</span><br><span class="line">    dlsite_html = etree.HTML(dlsite_response.text)</span><br><span class="line">    save_text_name = dlsite_html.xpath(<span class="string">'//div[@class="base_title_br clearfix"]/h1/a/text()'</span>)[<span class="number">0</span>]</span><br><span class="line">    message = dlsite_html.xpath(<span class="string">'//div[@id="work_right_inner"]'</span>)[<span class="number">0</span>]</span><br><span class="line">    text_name = save_path + <span class="string">r'\&#123;&#125;'</span>.format(dir_name) + <span class="string">'.txt'</span></span><br><span class="line">    f = open(text_name,<span class="string">'a'</span>)</span><br><span class="line">    f.write(save_text_name +<span class="string">'\n'</span>)</span><br><span class="line">    f.write(message + <span class="string">'\n'</span>)</span><br><span class="line">    f.close</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    tag = input(<span class="string">'输入标签:\t'</span>)</span><br><span class="line">    main(tag)</span><br><span class="line">    <span class="comment"># main('ritsuka-mizutani')</span></span><br></pre></td></tr></table></figure></div><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>因为懒得改了,说明下吧:</p><ul><li>自己的 IDM.exe 文件位置为 <code>F:\Program Files\xiazai\Internet Download Manager\IDMan.exe</code></li><li>自己的文件下载目录为 <code>G:\1A-MUSIC\NEW\thing\{}</code> 其中{}内为每一个的 RJ 号</li><li>其实完成后内含的 txt 里面包含 RJ 名字,但是可以搭配这个 <a href="https://github.com/Watanuki-Kimihiro/Doujin_Voice_Renamer" target="_blank" rel="noopener">https://github.com/Watanuki-Kimihiro/Doujin_Voice_Renamer</a> 使用,方便管理.</li></ul><h4 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h4><ul><li>给 mp3 文件添加封面,美观一点</li><li>百度云自动上传和分享,关键是现在好用的百度云命令行没有了, <code>baidupcs-go</code>  多久没更新了</li></ul><h3 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h3><p><a href="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591836213131-eb1073be-6b9a-419b-9273-4b6940768ca4.png#align=left&display=inline&height=534&margin=%5Bobject%20Object%5D&name=kak.PNG&originHeight=534&originWidth=1755&size=139186&status=done&style=none&width=1755" data-fancybox="group" data-caption="kak.PNG" class="fancybox"><img alt="kak.PNG" title="kak.PNG" data-src="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591836213131-eb1073be-6b9a-419b-9273-4b6940768ca4.png#align=left&display=inline&height=534&margin=%5Bobject%20Object%5D&name=kak.PNG&originHeight=534&originWidth=1755&size=139186&status=done&style=none&width=1755" class="lazyload"></a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建免费的代理</title>
      <link href="/2020/06/10/yuque/da-jian-mian-fei-de-dai-li/"/>
      <url>/2020/06/10/yuque/da-jian-mian-fei-de-dai-li/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id><a href="#" class="headerlink" title></a><a href="https://cdn.nlark.com/yuque/0/2020/jpeg/1550831/1591781763892-44019e6c-b4e4-4b80-a458-ab994e8805d2.jpeg#align=left&display=inline&height=459&margin=%5Bobject%20Object%5D&name=1572740378-6a7903aecd78a4d.jpg&originHeight=459&originWidth=1080&size=7975&status=done&style=none&width=1080" data-fancybox="group" data-caption="1572740378-6a7903aecd78a4d.jpg" class="fancybox"><img alt="1572740378-6a7903aecd78a4d.jpg" title="1572740378-6a7903aecd78a4d.jpg" data-src="https://cdn.nlark.com/yuque/0/2020/jpeg/1550831/1591781763892-44019e6c-b4e4-4b80-a458-ab994e8805d2.jpeg#align=left&display=inline&height=459&margin=%5Bobject%20Object%5D&name=1572740378-6a7903aecd78a4d.jpg&originHeight=459&originWidth=1080&size=7975&status=done&style=none&width=1080" class="lazyload"></a></h2><h2 id="环境和工具"><a href="#环境和工具" class="headerlink" title="环境和工具"></a>环境和工具</h2><ul><li>goproxy</li><li>heroku</li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li>goproxy 使用 go 语言的代理软件,方便使用</li><li>hroku 老牌的 AWS 网站,坚持的时间长</li><li>项目地址: <a href="https://github.com/snail007/goproxy-heroku" target="_blank" rel="noopener">https://github.com/snail007/goproxy-heroku</a></li></ul><h2 id="具体"><a href="#具体" class="headerlink" title="具体"></a>具体</h2><ol><li>登陆<a href="https://dashboard.heroku.com/login" target="_blank" rel="noopener">https://dashboard.heroku.com/login</a></li><li>登陆后登陆: <a href="https://heroku.com/deploy?template=https://github.com/snail007/goproxy-heroku" target="_blank" rel="noopener">点击</a></li><li>执行以下三个步骤，见下图：<ol><li>输入 App name.例如<code>test1-goproxy</code></li><li>Choose a region:选择一个.例如 United States</li><li>点击：Deploy app</li><li><a href="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591781496067-dfaf264e-e0e5-4c04-b1f1-42651dda32c5.png#align=left&display=inline&height=505&margin=%5Bobject%20Object%5D&name=1.png&originHeight=505&originWidth=452&size=25954&status=done&style=none&width=452" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591781496067-dfaf264e-e0e5-4c04-b1f1-42651dda32c5.png#align=left&display=inline&height=505&margin=%5Bobject%20Object%5D&name=1.png&originHeight=505&originWidth=452&size=25954&status=done&style=none&width=452" class="lazyload"></a></li><li>完成部署<a href="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591781522624-9e7f4fd9-916a-4b6a-99f4-91844dc57456.png#align=left&display=inline&height=341&margin=%5Bobject%20Object%5D&name=2.png&originHeight=341&originWidth=445&size=21636&status=done&style=none&width=445" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://cdn.nlark.com/yuque/0/2020/png/1550831/1591781522624-9e7f4fd9-916a-4b6a-99f4-91844dc57456.png#align=left&display=inline&height=341&margin=%5Bobject%20Object%5D&name=2.png&originHeight=341&originWidth=445&size=21636&status=done&style=none&width=445" class="lazyload"></a></li></ol></li><li>客户端运行<ol><li><strong>独立 goproxy 客户端：</strong></li></ol></li></ol><p><code>proxy.exe http -t tcp -p :6600 -T wss -P test1-goproxy.herokuapp.com:443 --parent-ws-password pass -q 8.8.8.8:53 --timeout 30000</code><br>在浏览器上设置代理：127.0.0.1:6600 http</p><ol><li><strong>安卓客户端：</strong></li></ol><p>安卓 <a href="https://github.com/snail007/goproxy-ss-plugin-android" target="_blank" rel="noopener">goproxy-ss-plugin</a> 插件配置可以写：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">主机：test1-goproxy.herokuapp.com</span><br><span class="line"></span><br><span class="line">端口：443</span><br><span class="line"></span><br><span class="line">加密方法：aes-256-cfb</span><br><span class="line"></span><br><span class="line">密码：123</span><br><span class="line"></span><br><span class="line">插件参数：-S http -j 123 -h aes-256-cfb -T wss -P test1-goproxy.herokuapp.com:443 --parent-ws-password pass --timeout 30000</span><br></pre></td></tr></table></figure></div><ol><li><strong>注意</strong></li></ol><p>注意：本次部署中需要调整的就是<code>test1-goproxy</code>改为你自己的名称。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>速度上限也就 720p</li><li>关键是保持外界联系,防止失联</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何阅读一本书</title>
      <link href="/2020/06/10/yuque/ru-he-yue-du-yi-ben-shu/"/>
      <url>/2020/06/10/yuque/ru-he-yue-du-yi-ben-shu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>读书笔记</strong><br><a href="https://cdn.nlark.com/yuque/0/2020/jpeg/1550831/1591754996104-8484c9be-9ccd-4d58-ac50-ff955a8c6fd3.jpeg#align=left&display=inline&height=251&margin=%5Bobject%20Object%5D&name=download.jpg&originHeight=251&originWidth=201&size=10489&status=done&style=none&width=201" data-fancybox="group" data-caption="download.jpg" class="fancybox"><img alt="download.jpg" title="download.jpg" data-src="https://cdn.nlark.com/yuque/0/2020/jpeg/1550831/1591754996104-8484c9be-9ccd-4d58-ac50-ff955a8c6fd3.jpeg#align=left&display=inline&height=251&margin=%5Bobject%20Object%5D&name=download.jpg&originHeight=251&originWidth=201&size=10489&status=done&style=none&width=201" class="lazyload"></a></p><h2 id="具体"><a href="#具体" class="headerlink" title="具体"></a>具体</h2><h3 id="第一章-前提准备"><a href="#第一章-前提准备" class="headerlink" title="第一章 (前提准备)"></a>第一章 (前提准备)</h3><p>1、先看书名和序，我们会收获本书的主题思想。<br>2、研究目录页与索引，收获作者想说明的内容。<br>3、作者介绍<br>4、以翻书的方式阅读，得到主要论点<br>5、重视结尾的两三页及后记，因为结尾作者观点会较突出。<br>6、读书时集中精力，保持敏感度，跟着作者的思路走，做白日梦会让我们觉得书晦涩难懂！ 注意点<br>7、遇到难懂的怎么办？放弃！！遇到不会的就略过，不要纠结，继续读。<br>（被第 7 点这个方法震惊，确实，从小受的教育就是遇到困难努力去克服，通过查询资料理解每句话的意思，但是读书是主动性的事情，如果难点太多，会让我们很有挫败感而失去读下去的兴趣，所以，我们可以先略过，继续往下读，读完之后再思考前面的问题，可能更简单，而且，这也不至于我们因小失大——因为一个小的困难，丧失掉书本中的大思想。） 个人认为，第 7 点尤其对学习专业知识，应对考试特别重要！<br>8、解决读书走神的妙招：用手指着读，但是手要快速移动，眼睛跟着也快速移动，可以继续增加手移动速度来训练眼睛，进而提高大脑的反应。这种方法的原理是将注意力集中在手指的文字上。（ps:已经亲测，感觉很有效）<br>9、速度掌控：读书速度张弛有度，比如关于历史背景自然景观可以快读，关于哲理可放慢速度。</p><h3 id="第二章-读书者要求"><a href="#第二章-读书者要求" class="headerlink" title="第二章 (读书者要求)"></a>第二章 (读书者要求)</h3><h4 id="提出问题-自我解读-内部消化"><a href="#提出问题-自我解读-内部消化" class="headerlink" title="提出问题,自我解读,内部消化"></a>提出问题,自我解读,内部消化</h4><p>1、整体来说，这本书在谈论什么？<br>2、细部来说，有哪些重要的论点、想法？<br>3、对这本书做出自己的评判，有道理吗？<br>4、这本书对我的影响？在除了获得资讯外，我还得到了什么启发与哲理？</p><h4 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h4><ul><li>工具使用<ol><li>ipad</li><li>语音输入</li><li>快速笔记</li></ol></li><li>笔记要点</li></ul><p>1、提出问题，自己尝试回答<br>2、尽量读出作者的言外之意，用笔写下（做笔记可以保持清醒、把笔记、感想记下）<br>3、在书上空白处做笔记，在书的前后空白页将大纲写出来，首页及末页是结构笔记，重点是结构而不是细节内容。<br>4、按照规则单一执行，循序渐进，孰能生巧！</p><h3 id="第三章-书籍分类"><a href="#第三章-书籍分类" class="headerlink" title="第三章 (书籍分类)"></a>第三章 (书籍分类)</h3><p>书籍是需要通过分类来阅读的.</p><h3 id="第四章-透视法则-书籍的基本框架"><a href="#第四章-透视法则-书籍的基本框架" class="headerlink" title="第四章 透视法则 (书籍的基本框架)"></a>第四章 透视法则 (书籍的基本框架)</h3><p>理清书的骨架是基础，一本书出现在面前，如盛装打扮，但是“我们一定要有一双 X 光线的透视眼来看这本书”，</p><h4 id="分析规则"><a href="#分析规则" class="headerlink" title="分析规则"></a>分析规则</h4><p>1、依照书本的种类及主题分类。<br>2、必须能用简单几句话讲述本书内容，否则，你是连自己也骗不过。<br>3、按照顺序与关系列列出全书中最重要的部分。将全书纲要列出后，再将各个部分纲要列出。（不仅是表面纲要，还要深层次作者的隐意，一本书都是有血有肉，有骨架的。）<br>4、发现作者的意图，找出作者想要解决的问题</p><h3 id="第五章-内化思考-用自己的话理解作者的意思"><a href="#第五章-内化思考-用自己的话理解作者的意思" class="headerlink" title="第五章 内化思考 (用自己的话理解作者的意思)"></a>第五章 内化思考 (用自己的话理解作者的意思)</h3><p>用自己的话理解</p><h3 id="第六章-判断主旨"><a href="#第六章-判断主旨" class="headerlink" title="第六章 判断主旨"></a>第六章 判断主旨</h3><p>判断作者主旨——“目的是在诠释作者的意图”。</p><h4 id="句子和主旨"><a href="#句子和主旨" class="headerlink" title="句子和主旨"></a>句子和主旨</h4><p>（1）找出关键字，与作者达成共识<br>（2）将一本书中最重要的句子圈出来，找出其中主旨。<br>（3）从相关文句的关联中，设法架构出一本的基本论述。</p><h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><h5 id="论述"><a href="#论述" class="headerlink" title="论述"></a>论述</h5><p>找出作者的论述，重新构架这些论述的前因后果，以明白作者的主张。</p><h5 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h5><p>确定作者已经解决了哪些问题，还有哪些是未解决的。在未解决的问题中，确定哪些是作者认为自己无法解决的问题。</p><h3 id="辩论发阅读-取其精华"><a href="#辩论发阅读-取其精华" class="headerlink" title="辩论发阅读 (取其精华)"></a>辩论发阅读 (取其精华)</h3><h4 id="必须能评论，提出批评，才算真正完成了这件事。"><a href="#必须能评论，提出批评，才算真正完成了这件事。" class="headerlink" title="必须能评论，提出批评，才算真正完成了这件事。"></a><strong>必须能评论，提出批评，才算真正完成了这件事。</strong></h4><p>1、当你不同意作者的观点时，要理性的表达自己的意见，不要无理的辩驳或争论。<br>2、：尊重知识点与个人观点的不同，在作任何评断之前，都要找出理论基础。</p><h4 id="读者与作者的“辩论”："><a href="#读者与作者的“辩论”：" class="headerlink" title="读者与作者的“辩论”："></a><strong>读者与作者的“辩论”：</strong></h4><p>1、在批评之前，读者必须完整的了解这本书，不要急着开始批评。<br>2、不要争强好辩或盲目反对<br>3、读者要为自己的不同意见找到理论基础。</p><h3 id="第七章-其他具体类别书籍的阅读"><a href="#第七章-其他具体类别书籍的阅读" class="headerlink" title="第七章 其他具体类别书籍的阅读"></a>第七章 其他具体类别书籍的阅读</h3><h4 id="实用性的书籍"><a href="#实用性的书籍" class="headerlink" title="实用性的书籍"></a>实用性的书籍</h4><p>“任何实用性的书都不能解决该书所关心的实际问题。一本理论性的作品可以解决自己提出的问题，但是实际的问题却只能靠行动来解决。”</p><h5 id="目的性阅读"><a href="#目的性阅读" class="headerlink" title="目的性阅读"></a>目的性阅读</h5><p>1、 读实用性书一定要了解作者的目的是什么<br>2、 了解他要你这么做的目的。</p><h4 id="想象文学"><a href="#想象文学" class="headerlink" title="想象文学"></a>想象文学</h4><p>评论式的阅读依赖一个人对一本书的全盘了解。说不出喜欢小说的理由的人，可能只是阅读了表象，而没有深入内里。<br>论说性作品要传达的是知识——在读者经验中曾经有过或没有过的知识。<br>想象文学是在阐述一个经验本身——那是读者只能借着阅读才能拥有或分享的经验。<br>阅读论说性，应该保持警觉，随时准备伸出利爪获取知识。<br>阅读一部伟大的文学作品的规则，应该是以达成某种深沉的经验为目标。<br>在想象文学中，不要去找共识、主旨或论述。</p><h5 id="想象文学的阅读规则"><a href="#想象文学的阅读规则" class="headerlink" title="想象文学的阅读规则"></a>想象文学的阅读规则</h5><p>1、 你必须将想象文学作品分类<br>2、 抓住整本书的大意。<br>3、 发现整本书是如何构架起来的。(故事的逻辑情节)<br>4、 对于小说的评价，我们必须完整的读完，并对故事的情节做出评价，喜欢或反感某件事情，某个人等。<br>【摘抄感动的几句话】：“在这个想象的世界中宾至如归。知道一切事件的进行，就像你亲临现场，身临其境。变成其中的一个成员，愿意与其中的角色做朋友，运用同情心与洞察力参与事件的发生，就像你会为朋友的遭遇所做的事一样。”<br>“你对角色都熟悉了，你加入了这个想象的世界，与他们生活在一起，同意这个社会的法律，呼吸同样的空气，品味同样的食物，在同样的高速公路上旅行。现在，你一定要跟随他们完成这场探险。”<br>“对于小说，我们不该反对或赞成，而是喜欢或不喜欢。我们在批评论说性作品时，关心的时他们所陈述的事实。在批评唯美文学时，就像字义所形容的，我们主要关心的时它的美丽。”</p><h4 id="历史书"><a href="#历史书" class="headerlink" title="历史书"></a><strong>历史书</strong></h4><p><strong>1、阅读历史书要点：</strong><br>1、对你感兴趣的事件或时期，尽可能阅读一种以上的历史书。<br>2、阅读历史书时，不只要关心在过去某个时间、地点真正发生了什么事，还要读在任何时空之中，尤其是现在，人们为什么会有如此这般行动的原因。<br><strong>2、阅读历史书要提出的问题：</strong><br>1、这本书主题，谈到了什么？没有谈到什么？<br>2、作者用什么方法来说历史故事？（根据年代分章节？经济历史、战争？哪个在故事中是最重要的）<br><strong>3、批评历史方式</strong>：可以批评——但永远在我们完全了解书中的意义之后。<br><strong>最后：</strong>与我何干？我们确实希望这个世界更好…历史会建议一些可行性。(以史为鉴，可以知兴替)</p><h3 id="第八章-阅读的层次-主题阅读"><a href="#第八章-阅读的层次-主题阅读" class="headerlink" title="第八章 阅读的层次 (主题阅读)"></a>第八章 阅读的层次 (主题阅读)</h3><p>分析阅读的技巧只适用于单一的作品，但是<strong>主题目标却适用于多个，主题阅读的准备工作：</strong><br>1、 先检视书目上所有的书，在读之前，先粗略看一遍，<br>2、 在确定某些书与自己主题相关时，就开始做主题阅读。<br><strong>总结看的书的主题</strong><br>第一：找到相关章节，在主题阅读中，你及你关心的主题才是基本的重点，而不是你阅读的书。<br>第二：带引作者与你达成共识。就是由读者建立起共识，带引你的作者们与你达成共识，而不是你跟着他们走。<br>第三：厘清问题，列出一些可以把我们的问题说的比较明白的问题，让那些作者来回答。<br>第四：界定主要及次要的议题。将作者针对各个问题的不同意见整理陈列在各个议题之旁。<br>第五：分析讨论。把问题和议题按顺序排列，以凸显主题。各个议题之间的关系要清楚的界定出来。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建品葱论坛-docker</title>
      <link href="/2020/06/09/yuque/da-jian-pin-cong-lun-tan-docker/"/>
      <url>/2020/06/09/yuque/da-jian-pin-cong-lun-tan-docker/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>品葱论坛本来是仿照知乎搭建的论坛，现在已沦为（颜色）蛆乱骂之地</li><li>还是挺方便的自己搭建一个自己用</li><li>PS : 语雀会员的领取 <a href="https://51.ruyo.net/15979.html" target="_blank" rel="noopener">https://51.ruyo.net/15979.html</a></li></ul><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>安装 docker</li><li>安装 docker-compose</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装Docker</span></span><br><span class="line"></span><br><span class="line">curl -sSL https://get.docker.com/ | sh</span><br><span class="line">service docker start</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装Docker Compose</span></span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></div><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><ul><li>因为是 docker 本来就是一件命令的事情</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name pincong-wecenter \</span><br><span class="line">  -p 80:80 \</span><br><span class="line">  -v $PWD/sql:/var/lib/mysql \</span><br><span class="line">  -v $PWD/logs:/data/logs \</span><br><span class="line">  -v $PWD/www:/data/htdocs \</span><br><span class="line">  xmader/pincong-wecenter</span><br></pre></td></tr></table></figure></div><ul><li>导入数据库<ol><li><code>sudo docker exec -it pincong-wecenter bash</code></li><li>mysql -h 127.0.0.1 -P 3306</li><li>show databases;</li><li>use db</li><li>source /data/htdocs/install/db/tables.sql</li><li>source /data/htdocs/install/db/settings.sql</li></ol></li></ul><ul><li>其他说明</li></ul><p>初始的密码和用户名都是 admin</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自动部署语雀的文章到GitHub的hexo博客</title>
      <link href="/2020/06/06/yuque/zi-dong-bu-shu-yu-que-de-wen-zhang-dao-github-de-hexo-bo-ke/"/>
      <url>/2020/06/06/yuque/zi-dong-bu-shu-yu-que-de-wen-zhang-dao-github-de-hexo-bo-ke/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>技术   教程</p><h2 id="环境以及工具"><a href="#环境以及工具" class="headerlink" title="环境以及工具"></a>环境以及工具</h2><ul><li>GitHub</li><li>Travis-ci</li><li>hexo + node</li><li>腾讯云服务器</li></ul><h2 id="不足以及优点"><a href="#不足以及优点" class="headerlink" title="不足以及优点"></a>不足以及优点</h2><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ul><li>部署方便。免费</li><li>之后的管理就不用服务器了</li><li>比原生的管理后端好用太多比如什么<strong>hexo-admin,hexo-editor</strong>.</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点:"></a>缺点:</h3><ul><li>图片无法外链</li></ul><h3 id="其他说明："><a href="#其他说明：" class="headerlink" title="其他说明："></a>其他说明：</h3><ul><li>使用的是自己的管理仓库</li><li>需要配置 heox 的自动同步</li><li>需要把公钥写入 GitHub，<strong>注意：设置密钥的权限是 read/write，即必须有写入的权限。</strong></li></ul><h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><h3 id="安装-ruby-和-gem"><a href="#安装-ruby-和-gem" class="headerlink" title="安装 ruby 和 gem"></a>安装 ruby 和 gem</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://get.rvm.io | bash -s stable //安装ruby管理rvm</span><br><span class="line">source /etc/profile.d/rvm.sh</span><br><span class="line">echo "ruby_url=https://cache.ruby-china.com/pub/ruby" &gt; /usr/local/rvm/user/db</span><br><span class="line">rvm install 2.3 //以安装2.3为例</span><br><span class="line">gem install travis  //安装travis</span><br></pre></td></tr></table></figure></div><h3 id="配置私钥"><a href="#配置私钥" class="headerlink" title="配置私钥"></a>配置私钥</h3><ol><li>生成私钥</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "youremail@example.com"   //生成密钥对</span><br></pre></td></tr></table></figure></div><p>这个里面的 pub 公钥和 GitHub 的里面的公钥是一个，注意后面的配置</p><ol start="2"><li>加密私 🔑</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem install travis  //安装工具</span><br></pre></td></tr></table></figure></div><ol start="3"><li>命令行登陆</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">travis login --github-token  XXX   //这个token在github账户的设置的里面生成，注意repo的权限全部打开</span><br></pre></td></tr></table></figure></div><ol start="4"><li>新建一个文件夹复制文件</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir .travis</span><br><span class="line">cd .travis</span><br><span class="line">cp ~/.ssh/id_rsa .</span><br></pre></td></tr></table></figure></div><ol start="5"><li>加密私钥</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">travis encrypt-file id_rsa --add</span><br></pre></td></tr></table></figure></div><p>会生成一个命令行的命令，记录下来，修改：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl aes-256-cbc -K $encrypted_f217180e22ee_key -iv $encrypted_f217180e22ee_iv -in &#123;.travis&#125;/id_rsa.enc -out &#123;.travis&#125;/id_rsa -d</span><br></pre></td></tr></table></figure></div><p>其中括号里面的内容是自己加的，就是加了一个文件夹路径。</p><ol start="6"><li>ssh 配置</li></ol><p>在.travis 文件夹新建文件<strong>ssh_config</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">    User git</span><br><span class="line">    StrictHostKeyChecking no</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line">    IdentitiesOnly yes</span><br></pre></td></tr></table></figure></div><ol start="7"><li>travis 的网站配置<ol><li>travis 开启自己的 heox 的博客管理仓库 （即是博客的本体）</li><li>打开<strong>general</strong>的<strong>build pushed branches</strong>以及<strong>build pushed pull requests</strong> 打开</li><li>打开<strong>auto cancellation</strong>的<strong>auto cancel branch builds *<em>和 *</em>auto cancel request builds</strong></li></ol></li><li>新建.travis.yml 文件</li></ol><p>注意文件在 hexo 博客的根目录</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">language: node_js</span><br><span class="line">node_js:</span><br><span class="line">  - lts/*</span><br><span class="line"></span><br><span class="line">cache:</span><br><span class="line">  directories:</span><br><span class="line">    - node_modules</span><br><span class="line"></span><br><span class="line">before_install:</span><br><span class="line">  - export TZ='Asia/Shanghai'</span><br><span class="line">  - openssl aes-256-cbc -K $encrypted_f21718xxxxee_key -iv $encrypted_f21xxxx2ee_iv  -in .travis/id_rsa.enc -out .travis/id_rsa -d</span><br><span class="line">  - cp .travis/id_rsa  ~/.ssh/id_rsa</span><br><span class="line">  - chmod 600 ~/.ssh/id_rsa</span><br><span class="line">  - eval $(ssh-agent)</span><br><span class="line">  - ssh-add ~/.ssh/id_rsa</span><br><span class="line">  - cp .travis/ssh_config ~/.ssh/config</span><br><span class="line">  - git config --global user.name "yzxxhr"</span><br><span class="line">  - git config --global user.email yzdxxxoren@126.com</span><br><span class="line"></span><br><span class="line">install:</span><br><span class="line">  - npm install hexo-cli -g</span><br><span class="line">  - npm install</span><br><span class="line"></span><br><span class="line">script:</span><br><span class="line">  - npm run deploy</span><br><span class="line"></span><br><span class="line">branches:</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br></pre></td></tr></table></figure></div><ol start="9"><li>配置云雀插件</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install yuque-hexo //安装这个同步插件</span><br></pre></td></tr></table></figure></div><h3 id="配置-package-json-文件"><a href="#配置-package-json-文件" class="headerlink" title="配置 package.json 文件"></a>配置 package.json 文件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">"yuqueConfig": &#123;</span><br><span class="line">    "postPath": "source/_posts/yuque",</span><br><span class="line">    "cachePath": "yuque.json",</span><br><span class="line">    "mdNameFormat": "title",</span><br><span class="line">    "adapter": "hexo",</span><br><span class="line">    "concurrency": 5,</span><br><span class="line">    "baseUrl": "https://www.yuque.com/api/v2",</span><br><span class="line">    "login": "自己的用户名",</span><br><span class="line">    "repo": "知识库的ID",</span><br><span class="line">    "onlyPublished": false,</span><br><span class="line">    "token": "自己的oath的id"</span><br><span class="line">  &#125;,</span><br><span class="line">  "scripts": &#123;</span><br><span class="line">    "clean": "hexo clean",</span><br><span class="line">    "clean:yuque": "yuque-hexo clean",</span><br><span class="line">    "deploy": "npm run sync &amp;&amp; hexo deploy",</span><br><span class="line">    "publish": "npm run clean &amp;&amp; npm run deploy",</span><br><span class="line">    "dev": "hexo s",</span><br><span class="line">    "sync": "yuque-hexo sync",</span><br><span class="line">    "reset": "npm run clean:yuque &amp;&amp; npm run sync"</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure></div><p>在写入的时候注意某些逗号，并且<strong>token</strong>的获取在语雀的知识库的<strong>oath</strong>的获取，注意权限包含<strong>文档内容获取</strong>和<strong>知识库获取</strong>。</p><h3 id="腾讯云的配置"><a href="#腾讯云的配置" class="headerlink" title="腾讯云的配置"></a>腾讯云的配置</h3><p>登陆腾讯云的<strong>云函数</strong>,新建一个函数,函数的内容如下:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function main_handler($event, $context) &#123;</span><br><span class="line">    // 解析语雀post的数据</span><br><span class="line">    $update_title = '';</span><br><span class="line">    if($event-&gt;body)&#123;</span><br><span class="line">        $yuque_data= json_decode($event-&gt;body);</span><br><span class="line">        $update_title .= $yuque_data-&gt;data-&gt;title;</span><br><span class="line">    &#125;</span><br><span class="line">    // default params</span><br><span class="line">    $repos = 'xxxx';  // 你的仓库id 或 slug</span><br><span class="line">    $token = 'xxxxxx'; // 你的登录token</span><br><span class="line">    $message = date("Y/m/d").':yuque update:'.$update_title;</span><br><span class="line">    $branch = 'master';</span><br><span class="line">    // post params</span><br><span class="line">    $queryString = $event-&gt;queryString;</span><br><span class="line">    $q_token = $queryString-&gt;token ? $queryString-&gt;token : $token;</span><br><span class="line">    $q_repos = $queryString-&gt;repos ? $queryString-&gt;repos : $repos;</span><br><span class="line">    $q_message = $queryString-&gt;message ? $queryString-&gt;message : $message;</span><br><span class="line">    $q_branch = $queryString-&gt;branch ? $queryString-&gt;branch : 'master';</span><br><span class="line">    echo($q_token);</span><br><span class="line">    echo('===');</span><br><span class="line">    echo ($q_repos);</span><br><span class="line">    echo ('===');</span><br><span class="line">    echo ($q_message);</span><br><span class="line">    echo ('===');</span><br><span class="line">    echo ($q_branch);</span><br><span class="line">    echo ('===');</span><br><span class="line">    //request travis ci</span><br><span class="line">    $res_info = triggerTravisCI($q_repos, $q_token, $q_message, $q_branch);</span><br><span class="line"></span><br><span class="line">    $res_code = 0;</span><br><span class="line">    $res_message = '未知';</span><br><span class="line">    if($res_info['http_code'])&#123;</span><br><span class="line">        $res_code = $res_info['http_code'];</span><br><span class="line">        switch($res_info['http_code'])&#123;</span><br><span class="line">            case 200:</span><br><span class="line">            case 202:</span><br><span class="line">                $res_message = 'success';</span><br><span class="line">            break;</span><br><span class="line">            default:</span><br><span class="line">                $res_message = 'faild';</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $res = array(</span><br><span class="line">        'status'=&gt;$res_code,</span><br><span class="line">        'message'=&gt;$res_message</span><br><span class="line">    );</span><br><span class="line">    return $res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">* @description  travis api , trigger a build</span><br><span class="line">* @param $repos string 仓库ID、slug</span><br><span class="line">* @param $token string 登录验证token</span><br><span class="line">* @param $message string 触发信息</span><br><span class="line">* @param $branch string 分支</span><br><span class="line">* @return $info array 回包信息</span><br><span class="line">*/</span><br><span class="line">function triggerTravisCI ($repos, $token, $message='yuque update', $branch='master') &#123;</span><br><span class="line">    //初始化</span><br><span class="line">    $curl = curl_init();</span><br><span class="line">    //设置抓取的url</span><br><span class="line">    curl_setopt($curl, CURLOPT_URL, 'https://api.travis-ci.org/repo/'.$repos.'/requests');</span><br><span class="line">    //设置获取的信息以文件流的形式返回，而不是直接输出。</span><br><span class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">    //设置post方式提交</span><br><span class="line">    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "POST");</span><br><span class="line">    //设置post数据</span><br><span class="line">    $post_data = json_encode(array(</span><br><span class="line">        "request"=&gt; array(</span><br><span class="line">            "message"=&gt;$message,</span><br><span class="line">            "branch"=&gt;$branch</span><br><span class="line">        )</span><br><span class="line">    ));</span><br><span class="line">    $header = array(</span><br><span class="line">      'Content-Type: application/json',</span><br><span class="line">      'Travis-API-Version: 3',</span><br><span class="line">      'Authorization:token '.$token,</span><br><span class="line">      'Content-Length:' . strlen($post_data)</span><br><span class="line">    );</span><br><span class="line">    curl_setopt($curl, CURLOPT_HTTPHEADER, $header);</span><br><span class="line">    curl_setopt($curl, CURLOPT_POSTFIELDS, $post_data);</span><br><span class="line">    //执行命令</span><br><span class="line">    $data = curl_exec($curl);</span><br><span class="line">    $info = curl_getinfo($curl);</span><br><span class="line">    //关闭URL请求</span><br><span class="line">    curl_close($curl);</span><br><span class="line">    return $info;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></div><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><ul><li>其中的 ID 或者 slug 使用命令</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L http://api.travis-ci.org/repos/用户名/仓库  //自己的博客本体的用户名和仓库</span><br></pre></td></tr></table></figure></div><p>注意：<strong>就我自己的发现，似乎这个仓库必须是公开的，不然是不能获取 ID 的</strong>。</p><ul><li>其中的 你的登录 token 在 travis 的网站的 profile 里面获取，直接复制就行了。</li></ul><h4 id="新建一个提醒配置"><a href="#新建一个提醒配置" class="headerlink" title="新建一个提醒配置"></a>新建一个提醒配置</h4><p>注意 ：新建的是一个通过 API 开始触发的，保持默认的配置即可。获取到了一个 API 链接。</p><h3 id="语雀配置"><a href="#语雀配置" class="headerlink" title="语雀配置"></a>语雀配置</h3><ul><li>在知识库里面设置。</li><li>在开发者选项新建一个 webhook，其中 url 填入上面获得的 API 即可。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客第1期</title>
      <link href="/2020/06/05/yuque/bo-ke-di-1-qi/"/>
      <url>/2020/06/05/yuque/bo-ke-di-1-qi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>该博客模版案例来自  <a href="#">@蚂蚁金服体验技术部</a></p><p>###</p><h3 id="插入带链接的标题（ctrl-K）Best-Year-in-Music"><a href="#插入带链接的标题（ctrl-K）Best-Year-in-Music" class="headerlink" title="插入带链接的标题（ctrl+K）Best Year in Music"></a>插入带链接的标题（ctrl+K）<a href="https://pudding.cool/projects/music-history/" target="_blank" rel="noopener">Best Year in Music</a></h3><p>这幅可视化作品展示了 1960 年以来，Billboard  历年榜单的前五名音乐的变化情况，效果呈现设计感十足，还可以在聆听音乐的同时回顾音乐的变迁史。<br><a href="https://cdn.nlark.com/yuque/0/2019/png/85075/1569743511172-7dfff3da-684a-4902-babc-cd9117fe3b7a.png#align=left&display=inline&height=648&name=image.png&originHeight=1296&originWidth=2868&size=965213&status=done&width=1434" data-fancybox="group" data-caption="image.png" class="fancybox"><img alt="image.png" title="image.png" data-src="https://cdn.nlark.com/yuque/0/2019/png/85075/1569743511172-7dfff3da-684a-4902-babc-cd9117fe3b7a.png#align=left&display=inline&height=648&name=image.png&originHeight=1296&originWidth=2868&size=965213&status=done&width=1434" class="lazyload"></a><br><em>插入图片，点击图片，设置图片大小</em><br>值得一提的是，作者正是大名鼎鼎的数据新闻站点  <a href="https://pudding.cool/" target="_blank" rel="noopener">The Pudding</a>。作为可视化新闻媒体中的姣姣者，The Pudding 擅长对那些兼具信息量和娱乐度的争议性话题进行可视化呈现，来使得复杂的观点变得更容易被公众理解。该团队虽然仅由数名全职记者和工程师组成，但战斗力强悍，目前已有数十个大型的数据可视化作品。<br>输入作者  <a href="/dengfuping">@诸岳(dengfuping)</a></p><h3 id="Road-Suffixes-in-the-USA"><a href="#Road-Suffixes-in-the-USA" class="headerlink" title="Road Suffixes in the USA"></a><a href="https://erdavis.com/2019/07/04/road-suffixes-in-the-usa-take-2/" target="_blank" rel="noopener">Road Suffixes in the USA</a></h3><p>美国道路命名多种多样，例如著名的纽约第五大道（Fifth Avenue），又或者凤凰城（Phoenix）的 Washington Street，Thomas Road，Union Hill Drive 等。不同的道路，有不同的叫法，Avenue, Street, Road, Drive 等等。想了解更多关于美国道路命名可以参考<a href="http://blog.sina.com.cn/s/blog_7010d1db0101he93.html" target="_blank" rel="noopener">这篇文章</a>。<br>作者用 R 语言统计了美国每个县的每种道路后缀（例如 Avenue）的总里程，并把每个县总里程最大的道路后缀通过颜色映射到地图上。可以看出美国大部分县的道路都是以 Rd(Road 的缩写)结尾的。<br><a href="https://cdn.nlark.com/yuque/0/2019/png/85075/1569743625739-f1c8b376-5632-4d08-8fcc-56142f0b0c1a.png#align=left&display=inline&height=603&name=road-suffix-map.png&originHeight=1767&originWidth=2048&size=328604&status=done&width=699" data-fancybox="group" data-caption="road-suffix-map.png" class="fancybox"><img alt="road-suffix-map.png" title="road-suffix-map.png" data-src="https://cdn.nlark.com/yuque/0/2019/png/85075/1569743625739-f1c8b376-5632-4d08-8fcc-56142f0b0c1a.png#align=left&display=inline&height=603&name=road-suffix-map.png&originHeight=1767&originWidth=2048&size=328604&status=done&width=699" class="lazyload"></a><br><em>插入图片，点击图片，设置图片大小</em></p><p>另外还以柱状图的方式展示了每种道路后缀的总里程（英里）：<br><a href="https://cdn.nlark.com/yuque/0/2019/png/85075/1569743625720-b8759449-4b6a-4b11-bbc0-896fe8dca73e.png#align=left&display=inline&height=737&name=road-suffix-bar.png&originHeight=737&originWidth=890&size=23572&status=done&width=890" data-fancybox="group" data-caption="road-suffix-bar.png" class="fancybox"><img alt="road-suffix-bar.png" title="road-suffix-bar.png" data-src="https://cdn.nlark.com/yuque/0/2019/png/85075/1569743625720-b8759449-4b6a-4b11-bbc0-896fe8dca73e.png#align=left&display=inline&height=737&name=road-suffix-bar.png&originHeight=737&originWidth=890&size=23572&status=done&width=890" class="lazyload"></a><br>by <a href="/changzhe">@长哲(changzhe)</a></p><h1 id="「加餐」Hello-World-图可视化"><a href="#「加餐」Hello-World-图可视化" class="headerlink" title="「加餐」Hello World 图可视化"></a><a href="https://zhuanlan.zhihu.com/p/83685690" target="_blank" rel="noopener">「</a><a href="https://zhuanlan.zhihu.com/p/83685690" target="_blank" rel="noopener">加餐」</a><a href="https://zhuanlan.zhihu.com/p/83685690" target="_blank" rel="noopener">Hello World 图可视化</a></h1><p>图可视化是信息可视化的子领域，它通过展示元素、关系，帮助用户获取数据的洞悉能力。它已被广泛地应用在流程图、社交网络、英特网、蛋白质网络等关系数据的呈现。<br><a href="https://zhuanlan.zhihu.com/p/83685690" target="_blank" rel="noopener">本文</a>由 AntV 团队  <a href="/shiwu-5wap2">@十吾(shiwu-5wap2)</a> 👆 撰写，参考自[1][2]两篇图可视化学术论文，简要介绍图可视化的历史、背景、机遇与挑战。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客图床搭建</title>
      <link href="/2020/04/08/hexo-bo-ke-tu-chuang-da-jian/"/>
      <url>/2020/04/08/hexo-bo-ke-tu-chuang-da-jian/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://bolo-tuchuang.oss-cn-beijing.aliyuncs.com/2020/04/08/ed76c0408082602.png" data-fancybox="group" data-caption="1.png4255553276218449162.png" class="fancybox"><img alt="1.png4255553276218449162.png" title="1.png4255553276218449162.png" data-src="https://bolo-tuchuang.oss-cn-beijing.aliyuncs.com/2020/04/08/ed76c0408082602.png" class="lazyload"></a></p><blockquote><p>作为一个hexo博客,最操蛋的就是图床了,不能直接拖拽图片上传,比起solo博客显得有点麻烦,那么就需要有一个图床来使用,现在普遍用的是本地的如那件图床或者浏览器插件之类.都不太方便,介绍自己搭建一个好用快捷的图床</p></blockquote><h2 id="图床推荐"><a href="#图床推荐" class="headerlink" title="图床推荐"></a>图床推荐</h2><p>推荐几个还算好用的图床</p><ul><li>picgo</li><li>新浪图床插件</li></ul><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><p>安装docker环境<br>docker安装</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#CentOS 6</span><br><span class="line">rpm -iUvh http:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;6&#x2F;x86_64&#x2F;epel-release-6-8.noarch.rpm</span><br><span class="line">yum update -y</span><br><span class="line">yum -y install docker-io</span><br><span class="line">service docker start</span><br><span class="line">chkconfig docker on</span><br><span class="line"></span><br><span class="line">#CentOS 7、Debian、Ubuntu</span><br><span class="line">curl -sSL https:&#x2F;&#x2F;get.docker.com&#x2F; | sh</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure></div><p>docker-compose安装</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L &quot;https:&#x2F;&#x2F;get.daocloud.io&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.24.1&#x2F;docker-compose-$(uname -s)-$(uname -m)&quot; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br><span class="line">chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure></div><h2 id="编写Dockerfile-docker-compose-yml文件"><a href="#编写Dockerfile-docker-compose-yml文件" class="headerlink" title="编写Dockerfile+docker-compose.yml文件"></a>编写Dockerfile+docker-compose.yml文件</h2><p>因为本程序需要Java1.8的环境以及mysql的环境,下面用docker解决<br>0. 程序地址:<a href="https://github.com/Hello-hao/Tbed" target="_blank" rel="noopener">https://github.com/Hello-hao/Tbed</a></p><h3 id="下载最新realease版本"><a href="#下载最新realease版本" class="headerlink" title="下载最新realease版本"></a>下载最新realease版本</h3><p><a href="https://github.com/Hello-hao/Tbed/releases" target="_blank" rel="noopener">下载</a></p><h3 id="解压所得文件-编写Dockerfile文件"><a href="#解压所得文件-编写Dockerfile文件" class="headerlink" title="解压所得文件,编写Dockerfile文件"></a>解压所得文件,编写Dockerfile文件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull majiajue&#x2F;jdk1.8  &#x2F;&#x2F;先拉个镜像</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FROM majiajue&#x2F;jdk1.8</span><br><span class="line">RUN mkdir &#x2F;usr&#x2F;src&#x2F;myapp&#x2F;</span><br><span class="line">COPY . &#x2F;usr&#x2F;src&#x2F;myapp&#x2F;</span><br><span class="line">WORKDIR &#x2F;usr&#x2F;src&#x2F;myapp&#x2F;</span><br><span class="line">RUN chmod 777 &#x2F;usr&#x2F;src&#x2F;myapp&#x2F;</span><br><span class="line">EXPOSE 8088</span><br><span class="line">ENTRYPOINT  [&quot;java&quot;,&quot;-jar&quot;,&quot;Tbed.jar&quot;]</span><br></pre></td></tr></table></figure></div><p>注意不要使用官方的java镜像,高版本的java不能用,只能是1.8版本,然后将解压的<code>Tbed.jar</code>文件和<code>application.properties</code>文件和<code>Dockerfile</code>放在一个文件夹下.</p><h3 id="编写所用的docker-compose文件"><a href="#编写所用的docker-compose文件" class="headerlink" title="编写所用的docker-compose文件"></a>编写所用的docker-compose文件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  mysql:</span><br><span class="line">    container_name: mysql-asmr</span><br><span class="line">    image: mysql:5.7.20</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - data:&#x2F;var&#x2F;lib&#x2F;mysql</span><br><span class="line">      - conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: passwd</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;666:3306&quot;</span><br><span class="line">    networks:</span><br><span class="line">      - net</span><br><span class="line"></span><br><span class="line">  tu:</span><br><span class="line">    container_name: tuchuang</span><br><span class="line">    image: jdk:tu</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8088:8088&quot;</span><br><span class="line">    networks:</span><br><span class="line">      - net</span><br><span class="line">      </span><br><span class="line">volumes:</span><br><span class="line">  data:</span><br><span class="line">  conf:</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  net:</span><br></pre></td></tr></table></figure></div><p>自修改数据库密码之类的.</p><h3 id="导入数据库"><a href="#导入数据库" class="headerlink" title="导入数据库"></a>导入数据库</h3><p><strong>复制数据库到容器</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp picturebed.sql mysql-asmr:&#x2F;</span><br></pre></td></tr></table></figure></div><p><strong>进入容器操作</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql-asmr &#x2F;bin&#x2F;bash</span><br><span class="line">cd &#x2F;</span><br><span class="line">mysql -uroot -p</span><br><span class="line">输入设置的密码</span><br><span class="line">CREATE DATABASE &#96;picturebed&#96; CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">use picturebed;</span><br><span class="line">source picturebed.sql;</span><br></pre></td></tr></table></figure></div><p>显示OK说明导入完成.</p><p><strong>后续操作</strong><br>可以利用<code>docker volume inspect data/conf</code>查询所在位置,然后复制文件夹到本地,然后改<code>- data:/var/lib/mysql</code>成<code>- ./data:/var/lib/mysql</code>即实现可数据本地化.</p><p><strong>修改application.properties文件</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.username&#x3D;root</span><br><span class="line">spring.datasource.password&#x3D;passwd  &#x2F;&#x2F;你的密码</span><br><span class="line">spring.datasource.url&#x3D;jdbc:mysql:&#x2F;&#x2F;mysql-asmr:3306&#x2F;picturebed?useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf8&amp;serverTimezone&#x3D;GMT%2B8</span><br><span class="line">server.port&#x3D;8088   &#x2F;&#x2F;修改端口;不用修改</span><br><span class="line">Expression&#x3D;0 30 04 * * ?</span><br><span class="line"></span><br><span class="line">mybatis.configuration.map-underscore-to-camel-case&#x3D;true</span><br><span class="line">mybatis.mapper-locations&#x3D;classpath:mapper&#x2F;*.xml</span><br><span class="line">logging.level.cn.hellohao.dao&#x3D;debug</span><br><span class="line">spring.jackson.date-format&#x3D;yyyy-MM-dd HH:mm:ss</span><br><span class="line">spring.jackson.time-zone&#x3D;GMT+8</span><br><span class="line">spring.datasource.driver-class-name&#x3D;com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.type&#x3D;com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">spring.thymeleaf.cache&#x3D;false</span><br><span class="line">multipart.maxFileSize&#x3D;10240KB</span><br><span class="line">multipart.maxRequestSize&#x3D;10240KB</span><br><span class="line">spring.thymeleaf.mode &#x3D; LEGACYHTML5</span><br><span class="line">spring.http.multipart.location&#x3D;&#x2F;data&#x2F;upload_tmp</span><br><span class="line">systemupdate&#x3D;2020-04-07</span><br></pre></td></tr></table></figure></div><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up </span><br><span class="line">docker-compose up -d &#x2F;&#x2F;后台启动</span><br></pre></td></tr></table></figure></div><p>等待片刻,第一次初始化听费时间的.</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简简单单</title>
      <link href="/2020/03/19/jian-jian-dan-dan/"/>
      <url>/2020/03/19/jian-jian-dan-dan/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="简单？"><a href="#简单？" class="headerlink" title="简单？"></a>简单？</h1><blockquote><p>越简单的事越难做</p></blockquote><ul><li>如无必要，勿增实体</li><li>凡是做之前，先问自己，真的有必要吗？</li><li>向该闭嘴的对象闭嘴，向不该闭嘴的对象永不妥协。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生存 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用excel重命名</title>
      <link href="/2020/03/17/ru-he-shi-yong-excel-chong-ming-ming/"/>
      <url>/2020/03/17/ru-he-shi-yong-excel-chong-ming-ming/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>很多时候,都需要用到重命名,下面介绍用excel重命名</p></blockquote><h2 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h2><ol><li>新建一个bat文件<br>内容为</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir *.jpg &#x2F;b&gt;重命名.bat</span><br></pre></td></tr></table></figure></div><ol start="2"><li><p>双击运行<br>粘贴结果到excel中,并使用函数得到所需命令<br><a href="http://hexo-tuchuang.test.upcdn.net/1000%E9%A2%98_2020-03-17_19-41-44.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="http://hexo-tuchuang.test.upcdn.net/1000%E9%A2%98_2020-03-17_19-41-44.png" class="lazyload"></a></p></li><li><p>保存得到的,新建bat文件运行即可</p></li></ol><h2 id="字符使用"><a href="#字符使用" class="headerlink" title="字符使用"></a>字符使用</h2><p>按照下图可以实现字符的拼接<br><a href="http://hexo-tuchuang.test.upcdn.net/1000%E9%A2%98_2020-03-17_19-55-09.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="http://hexo-tuchuang.test.upcdn.net/1000%E9%A2%98_2020-03-17_19-55-09.png" class="lazyload"></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学会闭嘴太难了</title>
      <link href="/2020/03/17/xue-hui-bi-zui-tai-nan-liao/"/>
      <url>/2020/03/17/xue-hui-bi-zui-tai-nan-liao/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="学会闭嘴太难了"><a href="#学会闭嘴太难了" class="headerlink" title="学会闭嘴太难了"></a>学会闭嘴太难了</h1><blockquote><p>你要知道,人大多数时候的痛苦,就是因为自己太蠢了,可是这个世界是无法分辨的,蠢人照样可以说话,照样可以自由言论的幌子瞎几把说,你无能为力,你无法改变他人,人和人本质上是不能沟通的,只能有一个信息的交换,很多时候还是相对消息,也就是大多数都是错误的信息.</p></blockquote><p><strong>所以.怎么办呢?</strong></p><h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><ul><li>蠢人不闭嘴原则</li><li>绝对理论原则 ; 绝对分析法</li><li>语言限制说 ; 语言决定思考方式</li><li>主观能动性</li></ul><h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><ul><li>蠢人不闭嘴<br>蠢人是不会闭嘴的,所谓的蠢人是一群没有原则的人,他们的世界似乎没有一个绝对的定义,只有各种自己解释下事物的相对性,无法看到各种事物之间的联系和绝对性,用相对主义管中窥豹.是用局部打败整体的最佳阐释者,人的认识决定人的行为,人的观念定义决定人的认识,可是他们脑子里面的定义都是相对的,这就意味这他们定义的随机性,就像一个没有准则的数学,有时1+1=2.有时1+1=3,但是,问题在于,他们可以说话,并影响你的判断,这就很痛苦了</li><li>绝对理论原则 ; 绝对分析法<br>分析一个问题的时候,如何分析,比较是很多问题的核心方法,但是比较是要有对象的,而每个对象都是一个绝对样品.明确规则,才能比较,才能分析问题,不然所有的问题你最终的结论就永远是”我认为”,你将永远不能发现科学.这个所有问题的方法论.</li><li>语言限制说<br>语言很大程度决定人的思维方式,语言有着先入为主且潜移默化的恐怖功能,决定你的所思所想.</li><li>主观能动性<br>所以,我们怎么解决这种痛苦和问题呢?认识主观能动地,主观的去解决这种客观不确定的外在,就像牛顿的万有引力就是对相对论的完美宏观拟合,是主观,但是可以解释客观,一个人的认识同样需如此.</li></ul><h2 id="具体"><a href="#具体" class="headerlink" title="具体"></a>具体</h2><ul><li>闭嘴原则</li><li>绝对世界观</li><li>广博化语言结构</li><li>主观认识构建</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生存 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LIFE</title>
      <link href="/2020/03/16/life/"/>
      <url>/2020/03/16/life/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://raw.githubusercontent.com/yzddhr/yzddhr.github.io/tuchuang/img/2cz1-fxxfyev8636384.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://raw.githubusercontent.com/yzddhr/yzddhr.github.io/tuchuang/img/2cz1-fxxfyev8636384.jpg" class="lazyload"></a></p><h1 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h1><ul><li>认识你自己</li><li>妄立誓则祸近</li><li>凡是勿过度</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生存 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工具环境的搭建</title>
      <link href="/2020/03/15/gong-ju-huan-jing-de-da-jian/"/>
      <url>/2020/03/15/gong-ju-huan-jing-de-da-jian/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="docker-docker-compose"><a href="#docker-docker-compose" class="headerlink" title="docker ; docker-compose"></a>docker ; docker-compose</h2><a href="https://raw.githubusercontent.com/yzddhr/yzddhr.github.io/tuchuang/img/download.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://raw.githubusercontent.com/yzddhr/yzddhr.github.io/tuchuang/img/download.png" class="lazyload"></a><h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#CentOS 6</span><br><span class="line">rpm -iUvh http:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;6&#x2F;x86_64&#x2F;epel-release-6-8.noarch.rpm</span><br><span class="line">yum update -y</span><br><span class="line">yum -y install docker-io</span><br><span class="line">service docker start</span><br><span class="line">chkconfig docker on</span><br><span class="line"></span><br><span class="line">#CentOS 7、Debian、Ubuntu</span><br><span class="line">curl -sSL https:&#x2F;&#x2F;get.docker.com&#x2F; | sh</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure></div><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L &quot;https:&#x2F;&#x2F;get.daocloud.io&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.24.1&#x2F;docker-compose-$(uname -s)-$(uname -m)&quot; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br><span class="line">chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker搭建内网穿透的工具</title>
      <link href="/2020/03/15/docker-da-jian-nei-wang-chuan-tou-de-gong-ju/"/>
      <url>/2020/03/15/docker-da-jian-nei-wang-chuan-tou-de-gong-ju/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>想当初才用内网穿透的时候,是家里老电脑的一个http服务想外网访问,然后才搜了下,只不过当时只有什么花生壳还有什么nat什么的,不好用,而且还收费的好像.现在免费的软件多了,只不过人家花生壳有自己的产品生态,现在肯定是更好用了.当然,这是后话了.</p></blockquote><p><a href="https://raw.githubusercontent.com/yzddhr/yzddhr.github.io/tuchuang/img/2.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://raw.githubusercontent.com/yzddhr/yzddhr.github.io/tuchuang/img/2.png" class="lazyload"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>docker</li><li>docker-compose</li></ul><h2 id="项目安装"><a href="#项目安装" class="headerlink" title="项目安装"></a>项目安装</h2><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p>Github地址：<a href="https://github.com/khvysofq/proxyer" target="_blank" rel="noopener">https://github.com/khvysofq/proxyer</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li>下载docker-compose.yml文件</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;khvysofq&#x2F;proxyer&#x2F;master&#x2F;docker-compose.yml</span><br></pre></td></tr></table></figure></div><ol start="2"><li>设置环境变量</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PROXYER_PUBLIC_HOST&#x3D;1.1.1.1</span><br></pre></td></tr></table></figure></div><p>将1.1.1.1修改成自己的IP</p><ol start="2"><li>启动</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></div><ol start="4"><li>说明</li></ol><ul><li>ip:6789  //访问地址</li><li>进去之后设置客户端认证密码</li></ul><ol start="5"><li>其他<br>centos建议关闭防火墙,或者打开部分端口</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#CentOS 6系统</span><br><span class="line">service iptables stop</span><br><span class="line">chkconfig iptables off</span><br><span class="line"></span><br><span class="line">#CentOS 7系统</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure></div><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>全平台支持,比较成熟。<br>Windows可以直接下载界面版本，然后双击可执行文件，会弹出一个网页界面，输入上面的认证密码，即可开始配置穿透。</p><p>Linux下载压缩包后，解压出二进制文件，直接在当前目录使用./proxyer命令运行即可。</p><p>最后使用起来还是很简单的，由于是新项目，功能可能不是很丰富，看作者后期会不会慢慢完善了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
